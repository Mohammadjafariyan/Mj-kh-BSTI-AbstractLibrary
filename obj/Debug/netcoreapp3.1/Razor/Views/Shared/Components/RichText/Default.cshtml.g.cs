#pragma checksum "E:\workplace\shared\AbstractLibrary\Views\Shared\Components\RichText\Default.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "20280e3693733cb8ce4ae27986490b42e3bab3a9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_Components_RichText_Default), @"mvc.1.0.view", @"/Views/Shared/Components/RichText/Default.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/Components/RichText/Default.cshtml", typeof(AspNetCore.Views_Shared_Components_RichText_Default))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\workplace\shared\AbstractLibrary\Views\Shared\Components\RichText\Default.cshtml"
using BigPardakht.Model;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"20280e3693733cb8ce4ae27986490b42e3bab3a9", @"/Views/Shared/Components/RichText/Default.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c66e443ba81bfd444e2b1c1ae94c4deedf2b8d44", @"/_ViewImports.cshtml")]
    public class Views_Shared_Components_RichText_Default : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<(string propertyName,string label,string preValue)>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(86, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
#line 5 "E:\workplace\shared\AbstractLibrary\Views\Shared\Components\RichText\Default.cshtml"
  
    var generateRandomString = Guid.NewGuid().ToString();

#line default
#line hidden
            BeginContext(156, 57, true);
            WriteLiteral("\r\n<div class=\"form-group\"       >\r\n    <br/>\r\n    <label>");
            EndContext();
            BeginContext(214, 11, false);
#line 11 "E:\workplace\shared\AbstractLibrary\Views\Shared\Components\RichText\Default.cshtml"
      Write(Model.label);

#line default
#line hidden
            EndContext();
            BeginContext(225, 18, true);
            WriteLiteral("</label>\r\n    <div");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 243, "\"", 279, 2);
            WriteAttributeValue("", 251, "editor_", 251, 7, true);
#line 12 "E:\workplace\shared\AbstractLibrary\Views\Shared\Components\RichText\Default.cshtml"
WriteAttributeValue("", 258, generateRandomString, 258, 21, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(280, 55, true);
            WriteLiteral("\r\n\r\n         style=\"height: 150px\">\r\n        \r\n        ");
            EndContext();
            BeginContext(336, 24, false);
#line 16 "E:\workplace\shared\AbstractLibrary\Views\Shared\Components\RichText\Default.cshtml"
   Write(Html.Raw(Model.preValue));

#line default
#line hidden
            EndContext();
            BeginContext(360, 36, true);
            WriteLiteral("\r\n        \r\n    </div>\r\n</div>\r\n\r\n\r\n");
            EndContext();
#line 22 "E:\workplace\shared\AbstractLibrary\Views\Shared\Components\RichText\Default.cshtml"
  

      

        ViewData[MyConstants.PrintInLayoutEnd] = $@"
<link href=""/_content/ContentModule/Quill/Quill.css"" rel=""stylesheet""/>
    <link href=""/_content/ContentModule/Quill/Highlight.css"" rel=""stylesheet""/>


    <♦ src=""/_content/ContentModule/Quill/Highlight.js"" type=""text/javascript""></♦>
    <♦ src=""/_content/ContentModule/Quill/Quill.js"" type=""text/javascript""></♦>
    <♦>
                   var quill = new Quill('.editor_{generateRandomString}', {{
                       bounds: '#editor',
                       modules: {{
                           'syntax': true,
                           'toolbar': [
                               ['bold', 'italic', 'underline', 'strike'],
                               [{{ 'color': [] }}, {{ 'background': [] }}],
                               [{{ 'script': 'super' }}, {{ 'script': 'sub' }}],
                               [{{ 'header': '1' }}, {{ 'header': '2' }}, 'blockquote', 'code-block'],
                               [{{ 'list': 'ordered' }}, {{ 'list': 'bullet' }}, {{ 'indent': '-1' }}, {{ 'indent': '+1' }}],
                               [{{ 'direction': 'rtl' }}, {{ 'align': [] }}],
                               ['link', 'image', 'video', 'formula'],
                               ['clean']
                           ],
                       }},
                       theme: 'snow'
                   }});


quill.on('text-change', function(delta, oldDelta, source) {{
           updatequill();
            }})
           
                   function updatequill() {{
           
                       debugger;
                       $('input[name=""{Model.propertyName}""]').val(quill.root.innerHTML);
                       
                     
                   }}
               </♦>";
    

#line default
#line hidden
            BeginContext(2247, 333, true);
            WriteLiteral(@"
<script>
function docReady(fn) {
    // see if DOM is already available
    if (document.readyState === ""complete"" || document.readyState === ""interactive"") {
        // call on next available tick
        setTimeout(fn, 1);
    } else {
        document.addEventListener(""DOMContentLoaded"", fn);
    }
}  
    let html=`");
            EndContext();
            BeginContext(2581, 48, false);
#line 77 "E:\workplace\shared\AbstractLibrary\Views\Shared\Components\RichText\Default.cshtml"
         Write(Html.Raw(ViewData[MyConstants.PrintInLayoutEnd]));

#line default
#line hidden
            EndContext();
            BeginContext(2629, 279, true);
            WriteLiteral(@"`;

docReady(function() {
    // DOM is loaded and ready for manipulation here
    
 /*  let element= createElementFromHTML(``)
   
   document.body.append(element);*/
    
    html=html.replaceAll('♦','script')
    $('body').append(html);
    
});


</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<(string propertyName,string label,string preValue)> Html { get; private set; }
    }
}
#pragma warning restore 1591
